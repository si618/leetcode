<?xml version="1.0" encoding="utf-8"?>
<root>
	<!--
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format
		that is mostly human readable. The generation and parsing of the
		various data types are done through the TypeConverter classes
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple
		name/value pairs.

		Each data row contains a name, and value. The row also contains a
		type or mimetype. Type corresponds to a .NET class that support
		text/value conversion through the TypeConverter architecture.
		Classes that don't support this are serialized and stored with the
		mimetype set.

		The mimetype is used for serialized objects, and tells the
		ResXResourceReader how to depersist the object. This is currently not
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format
		that the ResXResourceWriter will generate, however the reader can
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->

	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
    <data name="LeetCode_Figlet" xml:space="preserve">
        <value>    __                __   ______            __
   / /   ___   ___   / /_ / ____/____   ____/ /___
  / /   / _ \ / _ \ / __// /    / __ \ / __  // _ \
 / /___/  __//  __// /_ / /___ / /_/ // /_/ //  __/
/_____/\___/ \___/ \__/ \____/ \____/ \__,_/ \___/
</value>
    </data>
    <data name="Command_App_Description" xml:space="preserve">
        <value>Run interactive console application</value>
    </data>
    <data name="Command_Info_Description" xml:space="preserve">
        <value>Show information about a problem</value>
    </data>
    <data name="Command_List_Description" xml:space="preserve">
        <value>List information about problems</value>
    </data>
    <data name="Command_Workflow_Description" xml:space="preserve">
        <value>Run benchmarks for a GitHub workflow</value>
    </data>
    <data name="Command_Benchmark_Description" xml:space="preserve">
        <value>Run benchmarks against leetcode problems</value>
    </data>
    <data name="Command_App" xml:space="preserve">
        <value>app</value>
    </data>
    <data name="Command_Benchmark" xml:space="preserve">
        <value>benchmark</value>
    </data>
    <data name="Command_Info" xml:space="preserve">
        <value>info</value>
    </data>
    <data name="Command_List" xml:space="preserve">
        <value>list</value>
    </data>
    <data name="Command_Workflow" xml:space="preserve">
        <value>workflow</value>
    </data>
    <data name="BenchmarkSettings_Error_MutuallyExclusive" xml:space="preserve">
        <value>--csharp and --fsharp options are mutually exclusive</value>
    </data>
    <data name="BenchmarkSettings_Error_BenchmarkNotFound" xml:space="preserve">
        <value>Benchmark not found '{0}'</value>
    </data>
    <data name="Category_ArraysAndHashing" xml:space="preserve">
        <value>Arrays &amp; Hashing</value>
    </data>
    <data name="Category_TwoPointers" xml:space="preserve">
        <value>Two Pointers</value>
    </data>
    <data name="Category_SlidingWindow" xml:space="preserve">
        <value>Sliding Window</value>
    </data>
    <data name="Category_Stack" xml:space="preserve">
        <value>Stack</value>
    </data>
    <data name="Category_BinarySearch" xml:space="preserve">
        <value>Binary Search</value>
    </data>
    <data name="Category_LinkedList" xml:space="preserve">
        <value>Linked List</value>
    </data>
    <data name="Category_Trees" xml:space="preserve">
        <value>Trees</value>
    </data>
    <data name="Category_Tries" xml:space="preserve">
        <value>Tries</value>
    </data>
    <data name="Category_HeapPriorityQueue" xml:space="preserve">
        <value>Heap / Priority Queue</value>
    </data>
    <data name="Category_BackTracking" xml:space="preserve">
        <value>Back Tracking</value>
    </data>
    <data name="Category_Graphs" xml:space="preserve">
        <value>Graphs</value>
    </data>
    <data name="Category_AdvancedGraphs" xml:space="preserve">
        <value>Advanced Graphs</value>
    </data>
    <data name="Category_OneDDynamicProgramming" xml:space="preserve">
        <value>1-D Dynamic Programming</value>
    </data>
    <data name="Category_TwoDDynamicProgramming" xml:space="preserve">
        <value>2-D Dynamic Programming</value>
    </data>
    <data name="Category_Greedy" xml:space="preserve">
        <value>Greedy</value>
    </data>
    <data name="Category_Intervals" xml:space="preserve">
        <value>Intervals</value>
    </data>
    <data name="Category_MathAndGeometry" xml:space="preserve">
        <value>Maths &amp; Geometry</value>
    </data>
    <data name="Category_BitManipulation" xml:space="preserve">
        <value>Bit Manipulation</value>
    </data>
    <data name="Category_NotInNeetCode" xml:space="preserve">
        <value>Not in NeetCode</value>
    </data>
    <data name="Difficulty_Easy_Markup" xml:space="preserve">
        <value>[green]Easy[/]</value>
    </data>
    <data name="Difficulty_Medium_Markup" xml:space="preserve">
        <value>[orange1]Medium[/]</value>
    </data>
    <data name="Difficulty_Hard_Markup" xml:space="preserve">
        <value>[red]Hard[/]</value>
    </data>
    <data name="Problem_Link_Markup" xml:space="preserve">
        <value>[gray]Name[/]</value>
    </data>
    <data name="Problem_Description_Markup" xml:space="preserve">
        <value>[gray]Description[/]</value>
    </data>
    <data name="Problem_Category_Markup" xml:space="preserve">
        <value>[gray]Category[/]</value>
    </data>
    <data name="Problem_Language_Markup" xml:space="preserve">
        <value>[gray]Language[/]</value>
    </data>
    <data name="Problem_Difficulty_Markup" xml:space="preserve">
        <value>[gray]Difficulty[/]</value>
    </data>
    <data name="Problem_Benchmark_Markup" xml:space="preserve">
        <value>[gray]Benchmark[/]</value>
    </data>
    <data name="ListCommand_Missing_CSharpBenchmark_Markup" xml:space="preserve">
        <value>[red]* Missing C# Benchmark *[/]</value>
    </data>
    <data name="ListCommand_Missing_FSharpBenchmark_Markup" xml:space="preserve">
        <value>[red]* Missing F# Benchmark *[/]</value>
    </data>
    <data name="ListCommand_Missing_BothBenchmarks_Markup" xml:space="preserve">
        <value>[red]* Missing C# and F# Benchmarks *[/]</value>
    </data>
    <data name="Problem_Name" xml:space="preserve">
        <value>Problem</value>
    </data>
    <data name="Problem_Category" xml:space="preserve">
        <value>Category</value>
    </data>
    <data name="Problem_Difficulty" xml:space="preserve">
        <value>Difficulty</value>
    </data>
    <data name="Problem_Language" xml:space="preserve">
        <value>Language</value>
    </data>
    <data name="ProblemSettings_Error_NoArgumentPassed" xml:space="preserve">
        <value>No problem argument passed</value>
    </data>
    <data name="ProblemSettings_Error_ProblemNotFound" xml:space="preserve">
        <value>Problem not found '{0}'</value>
    </data>
    <data name="BenchmarkRunner_SingleProblem_Markup" xml:space="preserve">
        <value>Running {0} {1} for [yellow]{2}[/]</value>
    </data>
    <data name="Benchmark_Singular" xml:space="preserve">
        <value>Benchmark</value>
    </data>
    <data name="Benchmark_Plural" xml:space="preserve">
        <value>Benchmarks</value>
    </data>
    <data name="BenchmarkRunner_Running_CSharpBenchmarks" xml:space="preserve">
        <value>Running C# benchmarks</value>
    </data>
    <data name="BenchmarkRunner_Running_FSharpBenchmarks" xml:space="preserve">
        <value>Running F# benchmarks</value>
    </data>
    <data name="BenchmarkRunner_Running_BothBenchmarks" xml:space="preserve">
        <value>Running C# and F# benchmarks</value>
    </data>
    <data name="BenchmarkRunner_Running_FilterSuffix_Markup" xml:space="preserve">
        <value> matching [yellow]{0}[/]</value>
    </data>
    <data name="Problem_Language_Separator" xml:space="preserve">
        <value>and</value>
    </data>
    <data name="Console_ReturnToMainMenu_Markup" xml:space="preserve">
        <value>[gray](Press any key to return to main menu)[/]</value>
    </data>
    <data name="Selection_Benchmark_MoreChoicesText" xml:space="preserve">
        <value>[gray](Move up and down to reveal more problems)[/]</value>
    </data>
    <data name="Selection_ProblemList" xml:space="preserve">
        <value>List Problems</value>
    </data>
    <data name="Selection_Exit" xml:space="preserve">
        <value>Exit</value>
    </data>
    <data name="Selection_RunBenchmark" xml:space="preserve">
        <value>Run Benchmark</value>
    </data>
    <data name="Selection_RunBenchmarks" xml:space="preserve">
        <value>Run Benchmarks</value>
    </data>
    <data name="Selection_About" xml:space="preserve">
        <value>About</value>
    </data>
    <data name="About" xml:space="preserve">
        <value>Benchmarked LeetCode problems written in C# and F#</value>
    </data>
    <data name="Selection_Benchmark_InstructionsText" xml:space="preserve">
        <value>[grey](Press [blue]&lt;space&gt;[/] to toggle, [green]&lt;enter&gt;[/] to run)[/]</value>
    </data>
    <data name="Selection_Benchmark_Title" xml:space="preserve">
        <value>Select benchmarks to run</value>
    </data>
    <data name="BenchmarkRunner_Running_SelectedBenchmarks" xml:space="preserve">
        <value>Running selected benchmarks</value>
    </data>
    <data name="BenchmarkRunner_SingleProblem_Name" xml:space="preserve">
        <value> [gray](method: {0})[/]</value>
    </data>
</root>